name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  GO_VERSION: '1.20'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: chartmuseum2oci-linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            artifact_name: chartmuseum2oci-linux-arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
            artifact_name: chartmuseum2oci-darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            artifact_name: chartmuseum2oci-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Get commit hash
        id: commit
        run: echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get build date
        id: build_date
        run: echo "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Build binary
        run: |
          cd chartmuseum2oci
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags="-X main.version=${{ steps.version.outputs.version }} \
                      -X main.commit=${{ steps.commit.outputs.commit }} \
                      -X main.buildDate=${{ steps.build_date.outputs.build_date }}" \
            -o ${{ matrix.artifact_name }} \
            main.go

      - name: Create checksum
        run: |
          cd chartmuseum2oci
          sha256sum ${{ matrix.artifact_name }} > ${{ matrix.artifact_name }}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            chartmuseum2oci/${{ matrix.artifact_name }}
            chartmuseum2oci/${{ matrix.artifact_name }}.sha256

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release archive
        run: |
          mkdir -p release
          for artifact in chartmuseum2oci-*; do
            if [ -d "$artifact" ]; then
              cp "$artifact"/* release/
            fi
          done
          cd release
          tar -czf chartmuseum2oci-${{ steps.version.outputs.version }}-binaries.tar.gz chartmuseum2oci-*
          sha256sum chartmuseum2oci-${{ steps.version.outputs.version }}-binaries.tar.gz > chartmuseum2oci-${{ steps.version.outputs.version }}-binaries.tar.gz.sha256

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/chartmuseum2oci-*
            release/chartmuseum2oci-${{ steps.version.outputs.version }}-binaries.tar.gz
            release/chartmuseum2oci-${{ steps.version.outputs.version }}-binaries.tar.gz.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
