name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  GO_VERSION: '1.20'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: |
          cd chartmuseum2oci
          go mod download

      - name: Verify dependencies
        run: |
          cd chartmuseum2oci
          go mod verify

      - name: Run tests
        run: |
          cd chartmuseum2oci
          go test -v ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: chartmuseum2oci
          args: --timeout=5m

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: chartmuseum2oci-linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            artifact_name: chartmuseum2oci-linux-arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
            artifact_name: chartmuseum2oci-darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            artifact_name: chartmuseum2oci-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get commit hash
        id: commit
        run: echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get build date
        id: build_date
        run: echo "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Build binary
        run: |
          cd chartmuseum2oci
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags="-X main.version=dev \
                      -X main.commit=${{ steps.commit.outputs.commit }} \
                      -X main.buildDate=${{ steps.build_date.outputs.build_date }}" \
            -o ${{ matrix.artifact_name }} \
            main.go

      - name: Test binary
        run: |
          cd chartmuseum2oci
          ./${{ matrix.artifact_name }} --version

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: chartmuseum2oci/${{ matrix.artifact_name }}
